 org jabref logic util io regexpbasedfilefinder filefinder   
 
  
 
  
 
  
  
 
      
    regexpbasedfilefinder regexp  character keyworddelimiter regexp   regexp keyworddelimiter   keyworddelimiter pattern createfilenamepattern fileparts extensionregexp  bibentry entry ioexception filepart   fileparts fileparts length - 1  replace   extension    ext_marker   
 
          
        function string  expandbracket   bracketedpattern expandbracketcontent keyworddelimiter  entry function string  brackettofilenameregex   expandbracket andthen regexpbasedfilefinder  tofilenameregex expandedbracketasfilenameregex   bracketedpattern expandbrackets filepart  brackettofilenameregex filenamepattern   expandedbracketasfilenameregex 
                 replaceall ext_marker  extensionregexp    
                 replaceall pattern compile '^'   filenamepattern   '$'  pattern case_insensitive patternsyntaxexception e ioexception format  there is a syntax error in the regular expression %s used to search files   filenamepattern   e tofilenameregex expandedcontent cleanedcontent   filenamecleaner cleanfilename expandedcontent expandedcontent equals cleanedcontent  ? pattern quote expandedcontent    
                      pattern quote expandedcontent            pattern quote cleanedcontent         
      
 
      
     override list path  findassociatedfiles bibentry entry  list path  directories  list extensions ioexception extensionregexp join      extensions findfile entry  directories  extensionregexp list path  findfile bibentry entry  list path  dirs extensionregexp ioexception   
        list path  res arraylist path directory   dirs    
            res addall findfile entry  directory  regexp  extensionregexp res list path  findfile bibentry entry path directory file extensionregexp ioexception   
        list path  resultfiles arraylist filename   file  
        path actualdirectory filename startswith         
            actualdirectory   path of       
            filename   filename substring 1 actualdirectory   directory  
          
 
          
        matcher m   escape_pattern matcher filename   
        stringbuilder s stringbuilder m find      
            m appendreplacement s  m group 1    ' '   m group 2    
          
        m appendtail s   
        filename   s tostring fileparts   filename split fileparts length    0 resultfiles index   0  index    fileparts length - 1   index dirtoprocess   fileparts index dirtoprocess matches  ^  $        
                actualdirectory   path of dirtoprocess equals dirtoprocess equals dirtoprocess     
                actualdirectory   actualdirectory getparent equals dirtoprocess       
                file   subdirs   actualdirectory tofile   listfiles subdirs restoffilestring   stringutil join fileparts       index   1  fileparts length file subdir   subdirs subdir isdirectory      
                            resultfiles addall findfile entry  subdir topath    restoffilestring  extensionregexp equals dirtoprocess restoffilestring   stringutil join fileparts       index   1  fileparts length path rootdirectory   actualdirectory stream path  pathstream   files walk actualdirectory path path   pathstream filter element -  issubdirectory rootdirectory  element   collect collectors tolist       
                        resultfiles addall findfile entry  path  restoffilestring  extensionregexp uncheckedioexception ioe ioe getcause    
                  
                
          
 
          
        pattern tomatch   createfilenamepattern fileparts  extensionregexp  entry   
        bipredicate path  basicfileattributes  matcher    path  attributes  -  tomatch matcher path getfilename   tostring    matches stream path  pathstream   files find actualdirectory  1  matcher  filevisitoption follow_links     
            resultfiles addall pathstream collect collectors tolist uncheckedioexception uncheckedioexception uncheckedioexception getcause resultfiles issubdirectory path rootdirectory  path path rootdirectory equals path     files isdirectory path   
      
  src main org jabref logic util io RegExpBasedFileFinder