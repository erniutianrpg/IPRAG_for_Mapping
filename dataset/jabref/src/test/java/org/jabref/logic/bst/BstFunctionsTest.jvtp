 org jabref logic bst bstfunctionstest   
     test testcomparefunctions recognitionexception   
        bstvm vm bstvm     
                function   test compare     
                    #5  #5 1  #2 3  #4 4  #3 4  #4 3  #4 4  #3 4  #4 h   h h   ha execute   test compare   
                      
 
        vm render collections emptylist     
 
        assertequals bstvm vm getstack   pop     
        assertequals bstvm vm getstack   pop     
        assertequals bstvm vm getstack   pop     
        assertequals bstvm vm getstack   pop     
        assertequals bstvm vm getstack   pop     
        assertequals bstvm vm getstack   pop     
        assertequals bstvm vm getstack   pop     
        assertequals bstvm vm getstack   pop     
        assertequals bstvm vm getstack   pop     
        assertequals bstvm vm getstack   pop     
        assertequals 0  vm getstack   size     
      
 
     test testarithmeticfunctions recognitionexception   
        bstvm vm bstvm     
                function   test     
                    #1  #1      % 2 
                    #5  #2  -   % 3 
                  
                execute   test   
                      
 
        vm render collections emptylist     
 
        assertequals 3  vm getstack   pop     
        assertequals 2  vm getstack   pop     
        assertequals 0  vm getstack   size     
      
 
     test testarithmeticfunctiontypemismatch recognitionexception   
        bstvm vm bstvm     
                function   test     
                    #1   hello      % should exception 
                  
                execute   test   
                      
 
        assertthrows bstvmexception vm render collections emptylist      
      
 
     test teststringoperations recognitionexception   
          
        bstvm vm bstvm     
                function   test     
                     h   ello                   % hello 
                     johnny         add period$ % johnny  
                     johnny         add period$ % johnny  
                     johnny         add period$ % johnny  
                     johnny?        add period$ % johnny? 
                     johnny         add period$ % johnny   
                     johnny         add period$ % johnny   
                     johnny?        add period$ % johnny?  
                     johnny         add period$ % johnny   
                  
                execute   test   
                      
 
        vm render collections emptylist     
 
        assertequals  johnny     vm getstack   pop     
        assertequals  johnny?    vm getstack   pop     
        assertequals  johnny     vm getstack   pop     
        assertequals  johnny     vm getstack   pop     
        assertequals  johnny?   vm getstack   pop     
        assertequals  johnny    vm getstack   pop     
        assertequals  johnny    vm getstack   pop     
        assertequals  johnny    vm getstack   pop     
        assertequals  hello   vm getstack   pop     
        assertequals 0  vm getstack   size     
      
 
     test testmissing recognitionexception   
        bstvm vm bstvm     
                entry   title           
                function   presort     cite$ 'sort key$      
                iterate   presort   
                read 
                sort 
                function   test     title missing$ cite$   
                iterate   test   
                      
        list bibentry  testentries   list of  
                bstvmtest defaulttestentry bibentry standardentrytype article  
                         withcitationkey  test   
                         withfield standardfield author   no title     
 
        vm render testentries   
 
        assertequals  test   vm getstack   pop            
        assertequals bstvm vm getstack   pop                
        assertequals  canh05   vm getstack   pop          
        assertequals bstvm vm getstack   pop               
        assertequals 0  vm getstack   size     
      
 
     test testnumnames recognitionexception   
        bstvm vm bstvm     
                function   test     
                     johnny foo   and   mary bar  num names$ 
                     johnny foo and mary bar  num names$ 
                  
                execute   test   
                      
 
        vm render collections emptylist     
 
        assertequals 2  vm getstack   pop     
        assertequals 1  vm getstack   pop     
        assertequals 0  vm getstack   size     
      
 
     test testsubstring recognitionexception   
        bstvm vm bstvm     
                function   test     
                     123456789  #2  #1          substring$  % 2 
                     123456789  #4  global max$ substring$  % 456789 
                     123456789  #1  #9          substring$  % 123456789 
                     123456789  #1  #10         substring$  % 123456789 
                     123456789  #1  #99         substring$  % 123456789 
                     123456789  #-7 #3          substring$  % 123 
                     123456789  #-1 #1          substring$  % 9 
                     123456789  #-1 #3          substring$  % 789 
                     123456789  #-2 #2          substring$  % 78 
                  execute   test   
                      
 
        vm render collections emptylist     
 
        assertequals  78   vm getstack   pop     
        assertequals  789   vm getstack   pop     
        assertequals  9   vm getstack   pop     
        assertequals  123   vm getstack   pop     
        assertequals  123456789   vm getstack   pop     
        assertequals  123456789   vm getstack   pop     
        assertequals  123456789   vm getstack   pop     
        assertequals  456789   vm getstack   pop     
        assertequals  2   vm getstack   pop     
        assertequals 0  vm getstack   size     
      
 
     test testempty recognitionexception   
        bstvm vm bstvm     
                entry   title           
                read 
                strings   s   
                function   test     
                    s empty empty empty title empty hallo   empty iterate   test   
                      
        list bibentry  testentry   list of bibentry standardentrytype article    
 
        vm render testentry   
 
        assertequals bstvm vm getstack   pop     
        assertequals bstvm vm getstack   pop     
        assertequals bstvm vm getstack   pop     
        assertequals bstvm vm getstack   pop     
        assertequals bstvm vm getstack   pop     
        assertequals 0  vm getstack   size     
      
 
     test testformatnamestatic recognitionexception   
        bstvm vm bstvm     
                function   format     charles louis xavier joseph de la vall \\'e e poussin  #1   vv~  ll    jj    f ?  format name$   
                execute   format   
                      
        list bibentry  v   collections emptylist    
 
        vm render v   
 
        assertequals  de~la vall \\'e e~poussin  c ~l  x ~j?   vm getstack   pop     
        assertequals 0  vm getstack   size     
      
 
     test testformatnameinentries recognitionexception   
        bstvm vm bstvm     
                entry   author           
                function   presort     cite$ 'sort key$      
                iterate   presort   
                read 
                sort 
                function   format    author #2   vv~  ll    jj    f ?  format name$   
                iterate   format   
                      
        list bibentry  testentries   list of  
                bstvmtest defaulttestentry bibentry standardentrytype book  
                         withcitationkey  test   
                         withfield standardfield author   jonathan meyer and charles louis xavier joseph de la vall \\'e e poussin     
 
        vm render testentries   
 
        assertequals  de~la vall \\'e e~poussin  c ~l  x ~j?   vm getstack   pop     
        assertequals  annabi  h?   vm getstack   pop     
        assertequals 0  vm getstack   size     
      
 
     test testchangecase recognitionexception   
        bstvm vm bstvm     
                strings   title   
                read 
                function   format title     
                    duplicate$ empty$ 
                          pop$      
                           t  change function   test     
                     hello world   u  change format title 
                     hello world  format title 
                       format title 
                      a  d   c ycle   i  b  m 's  f ramework a pplication  d evelopment and  c ase   u  change format title 
                  
                execute   test   
                      
 
        vm render collections emptylist     
 
        assertequals   a  d   c ycle   i  b  m 's  f ramework a pplication  d evelopment and  c ase   
                vm getstack   pop     
        assertequals     vm getstack   pop     
        assertequals  hello world   vm getstack   pop     
        assertequals  hello world   vm getstack   pop     
        assertequals 0  vm getstack   size     
      
 
     test testtextlength recognitionexception   
        bstvm vm bstvm     
                function   test     
                     hello world  text length$                                  % 11 
                     hello  w orld  text length$                                % 11 
                       text length$                                             % 0 
                      a  d   cycle   text length$                               % 8 is one character   text length$                    % 1 is   one   c h  aracter as well   text length$    % 1 
                      \\and too  text length$                              % 1 
                     these are  \\11   text length$                             % 11 
                  
                execute   test   
                      
 
        vm render collections emptylist     
 
        assertequals 11  vm getstack   pop     
        assertequals 1  vm getstack   pop     
        assertequals 1  vm getstack   pop     
        assertequals 1  vm getstack   pop     
        assertequals 8  vm getstack   pop     
        assertequals 0  vm getstack   pop     
        assertequals 11  vm getstack   pop     
        assertequals 11  vm getstack   pop     
        assertequals 0  vm getstack   size     
      
 
     test testinttostr recognitionexception   
        bstvm vm bstvm     
                function   test     #3 to str$ #9999 to str$   
                execute   test   
                      
 
        vm render collections emptylist     
 
        assertequals  9999   vm getstack   pop     
        assertequals  3   vm getstack   pop     
        assertequals 0  vm getstack   size     
      
 
     test testchrtoint recognitionexception   
        bstvm vm bstvm     
                function   test      h  chr to execute   test   
                      
 
        vm render collections emptylist     
 
        assertequals 72  vm getstack   pop     
        assertequals 0  vm getstack   size     
      
 
     test testchrtointinttochr recognitionexception   
        bstvm vm bstvm     
                function   test      h  chr to int to chr$   
                execute  test  
                      
 
        vm render collections emptylist     
 
        assertequals  h   vm getstack   pop     
        assertequals 0  vm getstack   size     
      
 
     test testtype recognitionexception   
        bstvm vm bstvm     
                entry              
                function   presort     cite$ 'sort key$      
                iterate   presort   
                sort 
                function   test     type$   
                iterate   test   
                      
        list bibentry  testentries   list of bibentry standardentrytype article  withcitationkey  a bibentry standardentrytype book  withcitationkey  b bibentry standardentrytype misc  withcitationkey  c bibentry standardentrytype inproceedings  withcitationkey  d     
 
        vm render testentries   
 
        assertequals  inproceedings   vm getstack   pop     
        assertequals  misc   vm getstack   pop     
        assertequals  book   vm getstack   pop     
        assertequals  article   vm getstack   pop     
        assertequals 0  vm getstack   size     
      
 
     test testcalltype recognitionexception   
        bstvm vm bstvm     
                entry   title           
                function   presort     cite$ 'sort key$      
                iterate   presort   
                read 
                sort 
                function   inproceedings     inproceedings called on   title     
                function   book     book called on   title     
                iterate   call type$   
                      
        list bibentry  testentries   list of  
                bstvmtest defaulttestentry bibentry standardentrytype book  
                         withcitationkey  test   
                         withfield standardfield title   test     
 
        vm render testentries   
 
        assertequals  book called on test   vm getstack   pop     
        assertequals  
                 inproceedings called on effective work practices floss development  a model and propositions   
                vm getstack   pop     
        assertequals 0  vm getstack   size     
      
 
     test testswap recognitionexception   
        bstvm vm bstvm     
                function   a     #3  hallo  swap$   
                execute   a   
                      
 
        list bibentry  v   collections emptylist    
        vm render v   
 
        assertequals 3  vm getstack   pop     
        assertequals  hallo   vm getstack   pop     
        assertequals 0  vm getstack   size     
      
 
     test testassignfunction     
        bstvm vm bstvm     
                integers   test function   test func     #1 'test execute   test func   
                      
 
        vm render collections emptylist     
 
        map bstfunctions bstfunction  functions   vm latestcontext functions    
        asserttrue functions containskey  test func     
        assertnotnull functions get  test func     
        assertequals 1  vm latestcontext integers   get  test test testsimpleif     
        bstvm vm bstvm     
                function   path1     #1   
                function   path0     #0   
                function   test     
                    #1 path1 path0 0 path1 path0 execute   test   
                      
 
        vm render collections emptylist     
 
        assertequals 0  vm getstack   pop     
        assertequals 1  vm getstack   pop     
        assertequals 0  vm getstack   size     
      
 
     test testsimplewhile     
        bstvm vm bstvm     
                integers   i   
                function   test     
                    #3 'i    
                      i   
                      
                        i 
                        i #1 - 
                        'i execute   test   
                      
 
        vm render collections emptylist     
 
        assertequals 1  vm getstack   pop     
        assertequals 2  vm getstack   pop     
        assertequals 3  vm getstack   pop     
        assertequals 0  vm getstack   size     
      
 
     test testnestedcontrolfunctions recognitionexception   
        bstvm vm bstvm     
                strings   t   
                function   not       #0     #1 function   n dashify     
                     hello-world  't    
                       
                      t empty$ not t #1 #1 substring t #1 #2 substring$  --    not t #2 global max$ substring$ 't    
                              
                              
                                  t #1 #1 substring t #2 global max$ substring$ 't t #1 #1 substring$   
                            t #2 global max$ substring$ 't execute   n dashify   
                      
        list bibentry  v   collections emptylist    
 
        vm render v   
 
        assertequals 1  vm getstack   size     
        assertequals  hello--world   vm getstack   pop     
      
 
     test testlogic recognitionexception   
        bstvm vm bstvm     
                function   not       #0     #1 function   and     'skip$   pop$ #0 function   or       pop$ #1   'skip function   test     
                    #1 #1 and 
                    #0 #1 and 
                    #1 #0 and 
                    #0 #0 and 
                    #0 not 
                    #1 not 
                    #1 #1 or 
                    #0 #1 or 
                    #1 #0 or 
                    #0 #0 or 
                  
                execute   test   
                      
 
        vm render collections emptylist     
 
        assertequals bstvm vm getstack   pop     
        assertequals bstvm vm getstack   pop     
        assertequals bstvm vm getstack   pop     
        assertequals bstvm vm getstack   pop     
        assertequals bstvm vm getstack   pop     
        assertequals bstvm vm getstack   pop     
        assertequals bstvm vm getstack   pop     
        assertequals bstvm vm getstack   pop     
        assertequals bstvm vm getstack   pop     
        assertequals bstvm vm getstack   pop     
        assertequals 0  vm getstack   size     
      
 
      
 
     test testwidth recognitionexception   
        bstvm vm bstvm     
                entry   address author title type         label   
                strings   longest label   
                integers   number label longest label width   
                function   initialize longest label     
                       'longest label    
                    #1 'number label    
                    #0 'longest label width    
                  
                function  longest label pass    
                    number label to str$ 'label    
                    number label #1   'number label    
                    label width$ longest label width   
                          
                            label 'longest label    
                            label width$ 'longest label width    
                          
                        'skip execute   initialize longest label   
                iterate   longest label pass   
                function   begin bib     
                    preamble$ empty$ 
                        'skip$ 
                          preamble$ write$ newline begin thebibliography     longest label          
                  
                execute  begin bib  
                      
 
        list bibentry  testentries   list of bstvmtest defaulttestentry     
 
        vm render testentries   
 
        asserttrue vm latestcontext integers   containskey  longest label width     
        assertequals  \\begin thebibliography  1    vm getstack   pop     
      
 
     test testduplicateemptypopswapif recognitionexception   
        bstvm vm bstvm     
                function   emphasize     
                    duplicate$ empty$ 
                          pop$      
                            \\em   swap function   test     
                       emphasize 
                     hello  emphasize 
                  
                execute   test   
                      
 
        vm render collections emptylist     
 
        assertequals   \\em hello    vm getstack   pop     
        assertequals     vm getstack   pop     
        assertequals 0  vm getstack   size     
      
 
     test testpreamblewritenewlinequote     
        bstvm vm bstvm     
                function   test     
                    preamble$ 
                    write$ 
                    newline$ 
                     hello  
                    write$ 
                    quote$  quoted    quote$   
                    write$ 
                  
                execute   test   
                      
 
        bibdatabase testdatabase bibdatabase    
        testdatabase setpreamble  a preamble result   vm render collections emptylist    testdatabase   
 
        assertequals  a preamble\nhello\ quoted\    result   
      
  src test org jabref logic bst BstFunctionsTest