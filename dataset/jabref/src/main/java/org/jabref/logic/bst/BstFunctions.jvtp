 org jabref logic bst bstfunctions   
  
  
 
  
  
  
  
 
  
  
 
  
 
     functionalinterface bstfunction execute bstvmvisitor visitor  parserrulecontext ctx execute bstvmvisitor visitor  parserrulecontext ctx  bstentry bstentrycontext execute visitor  ctx bstfunctions bstvmcontext bstvmcontext  
                        stringbuilder bbl strings   bstvmcontext strings integers   bstvmcontext integers functions   bstvmcontext functions preamble   optional ofnullable bstvmcontext bibdatabase    flatmap bibdatabase  getpreamble  orelse stack   bstvmcontext stack bbl   bbl map bstfunction  getbuiltinfunctions     
        map bstfunction  builtinfunctions hashmap      
 
        builtinfunctions put bstisgreaterthan   
        builtinfunctions put bstislowerthan   
        builtinfunctions put bstequals   
        builtinfunctions put bstadd   
        builtinfunctions put bstsubtract   
        builtinfunctions put bstconcat   
        builtinfunctions put bstassignfunction     
        builtinfunctions put  add period bstaddperiod   
        builtinfunctions put  call type bstcalltypefunction     
        builtinfunctions put  change bstchangecase   
        builtinfunctions put  chr to bstchrtoint   
        builtinfunctions put  cite bstcitefunction     
        builtinfunctions put  duplicate bstduplicate   
        builtinfunctions put  empty bstempty   
        builtinfunctions put  format name bstformatname   
        builtinfunctions put bstif   
        builtinfunctions put to chr bstinttochr   
        builtinfunctions put to str bstinttostr   
        builtinfunctions put  missing bstmissing   
        builtinfunctions put  newline bstnewline   
        builtinfunctions put  num names bstnumnames   
        builtinfunctions put  pop bstpop   
        builtinfunctions put  preamble bstpreamble   
        builtinfunctions put  purify bstpurify   
        builtinfunctions put  quote bstquote   
        builtinfunctions put  skip bstskip   
        builtinfunctions put  stack bststack   
        builtinfunctions put  substring bstsubstring   
        builtinfunctions put  swap bstswap   
        builtinfunctions put  text length bsttextlength   
        builtinfunctions put  text prefix bsttextprefix   
        builtinfunctions put  top bsttop   
        builtinfunctions put  type bsttypefunction     
        builtinfunctions put  warning bstwarning   
        builtinfunctions put bstwhile   
        builtinfunctions put  width bstwidth   
        builtinfunctions put  write bstwrite builtinfunctions bstisgreaterthan bstvmvisitor visitor  parserrulecontext ctx stack size     2 bstvmexception  not enough operands on stack operation    line %d   formatted ctx start getline      
          
        object o2   stack pop    
        object o1   stack pop o1 integer      o2 integer bstvmexception  can only compare two integers with      
          
 
        stack push   integer  o1  compareto  integer  o2    0 ? bstvm bstvm bstislowerthan bstvmvisitor visitor  parserrulecontext ctx stack size     2 bstvmexception  not enough operands on stack operation      
          
        object o2   stack pop    
        object o1   stack pop o1 integer      o2 integer bstvmexception  can only compare two integers with    line %d   formatted ctx start getline      
          
 
        stack push   integer  o1  compareto  integer  o2    0 ? bstvm bstvm bstequals bstvmvisitor visitor  parserrulecontext ctx stack size     2 bstvmexception  not enough operands on stack operation    line %d   formatted ctx start getline      
          
        object o1   stack pop    
        object o2   stack pop o1 o2 stack push bstvm o1 o2 stack push bstvm stack push o1 equals o2  ? bstvm bstvm bstadd bstvmvisitor visitor  parserrulecontext ctx stack size     2 bstvmexception  not enough operands on stack operation    line %d   formatted ctx start getline      
          
        object o2   stack pop    
        object o1   stack pop o1 integer      o2 integer bstvmexception  can only compare two integers with    line %d   formatted ctx start getline      
          
 
        stack push  integer  o1    integer  o2 bstsubtract bstvmvisitor visitor  parserrulecontext ctx stack size     2 bstvmexception  not enough operands on stack operation -  line %d   formatted ctx start getline      
          
        object o2   stack pop    
        object o1   stack pop o1 integer      o2 integer bstvmexception  can only subtract two integers with -  line %d   formatted ctx start getline      
          
 
        stack push  integer  o1 -  integer  o2 bstconcat bstvmvisitor visitor  parserrulecontext ctx stack size     2 bstvmexception  not enough operands on stack operation    line %d   formatted ctx start getline      
          
        object o2   stack pop    
        object o1   stack pop o1 o1 o2 o2 o1 o2 logger error  o1            o1  o1 getclass     
            logger error  o2            o2  o2 getclass bstvmexception  can only concatenate two with    line %d   formatted ctx start getline      
          
 
        stack push o1 tostring     o2 bstassignfunction bstfunction   
 
         override execute bstvmvisitor visitor  parserrulecontext ctx execute visitor  ctx override execute bstvmvisitor visitor  parserrulecontext ctx  bstentry bstentry stack size     2 bstvmexception  not enough operands on stack operation     line %d   formatted ctx start getline      
              
            object o1   stack pop    
            object o2   stack pop o1 bstvmvisitor identifier identifier bstvmexception  invalid parameters  line %d   formatted ctx start getline name   identifier name o2 value bstentry bstentry localstrings containskey name     
                    bstentry localstrings put name  value strings containskey name     
                    strings put name  value o2 integer value bstentry bstentry localintegers containskey name     
                    bstentry localintegers put name  value integers containskey name     
                    integers put name  value bstvmexception  invalid parameters  line %d   formatted ctx start getline bstaddperiod bstvmvisitor visitor  parserrulecontext ctx stack isempty bstvmexception  not enough operands on stack operation add period$  line %d   formatted ctx start getline      
          
        object o1   stack pop o1 s bstvmexception  can only add a period to a add period$  line %d   formatted ctx start getline      
          
 
        matcher m   add_period_pattern matcher s m find      
            stringbuilder sb stringbuilder    
            m appendreplacement sb  m group 1    
            sb append group2   m group 2 group2 sb append m group 2    
              
            stack push sb tostring stack push s bstcalltypefunction bstfunction   
         override execute bstvmvisitor visitor  parserrulecontext ctx bstvmexception  call type$ can only be called from within a context  iterate or reverse    line %d   formatted ctx start getline      
          
 
         override execute bstvmvisitor visitor  parserrulecontext ctx  bstentry bstentry bstentry execute visitor  ctx functions get bstentry entry gettype   getname    execute visitor  ctx  bstentry bstchangecase bstvmvisitor visitor  parserrulecontext ctx stack size     2 bstvmexception  not enough operands on stack operation change line %d   formatted ctx start getline      
          
 
        object o1   stack pop o1 format      format length      1 bstvmexception  a format of length 1 is needed change line %d   formatted ctx start getline      
          
 
        object o2   stack pop o2 tochange bstvmexception  a is needed as second parameter change line %d   formatted ctx start getline      
          
 
        stack push bstcasechanger changecase tochange  bstcasechanger formatmode of format bstchrtoint bstvmvisitor visitor  parserrulecontext ctx stack isempty bstvmexception  not enough operands on stack operation chr to line %d   formatted ctx start getline      
          
        object o1   stack pop o1 s o1  length      1 bstvmexception  can only perform chr to on with length 1  line %d   formatted ctx start getline      
          
 
        stack push s charat 0 bstcitefunction bstfunction   
         override execute bstvmvisitor visitor  parserrulecontext ctx bstvmexception  must have an entry to cite$  line %d   formatted ctx start getline      
          
 
         override execute bstvmvisitor visitor  parserrulecontext ctx  bstentry bstentrycontext bstentrycontext execute visitor  ctx stack push bstentrycontext entry getcitationkey   orelse bstduplicate bstvmvisitor visitor  parserrulecontext ctx stack isempty bstvmexception  not enough operands on stack operation duplicate$  line %d   formatted ctx start getline      
          
        object o1   stack pop    
 
        stack push o1   
        stack push o1 bstempty bstvmvisitor visitor  parserrulecontext ctx stack isempty bstvmexception  not enough operands on stack operation empty$  line %d   formatted ctx start getline      
          
        object o1   stack pop o1 stack push bstvm o1 s bstvmexception  operand does not match function empty$  line %d   formatted ctx start getline      
          
 
        stack push    equals s trim    ? bstvm bstvm bstformatname bstvmvisitor visitor  parserrulecontext ctx stack size     3 bstvmexception  not enough operands on stack operation format name$  line %d   formatted ctx start getline      
          
        object o1   stack pop    
        object o2   stack pop    
        object o3   stack pop o1 o2 integer       o3 stack push format o1  
        integer name    integer  o2 names o3 names stack push authorlist a   authorlist parse names name   a getnumberofauthors bstvmexception  author out of bounds  number %d invalid s  line %d   formatted name  names  ctx start getline      
              
            author author   a getauthor name - 1   
 
            stack push bstnameformatter formatname author  format bstif bstvmvisitor visitor  parserrulecontext ctx stack size     3 bstvmexception  not enough operands on stack line %d   formatted ctx start getline      
          
 
        object f1   stack pop    
        object f2   stack pop    
        object i   stack pop f1 bstvmvisitor identifier      f1 parsetree   
                     f2 bstvmvisitor identifier      f2 parsetree   
                    i integer bstvmexception  expecting two functions and an integer line %d   formatted ctx start getline integer  i    0    
            callidentifierortree f2  visitor  ctx callidentifierortree f1  visitor  ctx callidentifierortree object f  bstvmvisitor visitor  parserrulecontext ctx f parsetree tree    
            visitor visit tree f bstvmvisitor identifier identifier    
            visitor resolveidentifier identifier name    ctx stack push f bstinttochr bstvmvisitor visitor  parserrulecontext ctx stack isempty bstvmexception  not enough operands on stack operation to chr$  line %d   formatted ctx start getline      
          
        object o1   stack pop o1 integer i bstvmexception  can only perform operation to chr$ on an integer  line %d   formatted ctx start getline      
          
 
        stack push valueof i intvalue bstinttostr bstvmvisitor visitor  parserrulecontext ctx stack isempty bstvmexception  not enough operands on stack operation to str$  line %d   formatted ctx start getline      
          
        object o1   stack pop o1 integer bstvmexception  can only transform an integer to an using to str$  line %d   formatted ctx start getline      
          
 
        stack push o1 tostring bstmissing bstvmvisitor visitor  parserrulecontext ctx stack isempty bstvmexception  not enough operands on stack operation missing$  line %d   formatted ctx start getline      
          
        object o1   stack pop o1 stack push bstvm o1 logger warn  not a or missing field in operation missing$  line %d   formatted ctx start getline      
            stack push bstvm stack push bstvm bstnewline bstvmvisitor visitor  parserrulecontext ctx bbl append '\n bstnumnames bstvmvisitor visitor  parserrulecontext ctx stack isempty bstvmexception  not enough operands on stack operation num names$  line %d   formatted ctx start getline      
          
        object o1   stack pop o1 s bstvmexception  need a at the top of the stack num names$  line %d   formatted ctx start getline      
          
 
        stack push authorlist parse s  getnumberofauthors bstpop bstvmvisitor visitor  parserrulecontext ctx    
        stack pop bstpreamble bstvmvisitor visitor  parserrulecontext ctx    
        stack push preamble bstpurify bstvmvisitor visitor  parserrulecontext ctx stack isempty bstvmexception  not enough operands on stack operation purify$  line %d   formatted ctx start getline      
          
        object o1   stack pop o1 logger warn  a is needed purify$    
            stack push stack push bstpurifier purify o1 bstquote bstvmvisitor visitor  parserrulecontext ctx    
        stack push bstskip bstvmvisitor visitor  parserrulecontext ctx bststack bstvmvisitor visitor  parserrulecontext ctx stack empty      
            logger debug  stack entry      stack pop bstsubstring bstvmvisitor visitor  parserrulecontext ctx stack size     3 bstvmexception  not enough operands on stack operation substring$  line %d   formatted ctx start getline      
          
        object o1   stack pop    
        object o2   stack pop    
        object o3   stack pop o1 integer len      o2 integer start      o3 s bstvmexception  expecting two integers and a substring$  line %d   formatted ctx start getline leni   len starti   start leni    integer max_value   2     
            leni   integer max_value   2 starti    integer max_value   2     
            starti   integer max_value   2 starti    integer min_value   2     
            starti   -integer min_value   2 starti   0    
            starti    s length     1  
            starti   math max 1   starti   1  - leni   
          
        stack push s substring starti - 1  math min  starti - 1    leni  s length bstswap bstvmvisitor visitor  parserrulecontext ctx stack size     2 bstvmexception  not enough operands on stack operation swap$  line %d   formatted ctx start getline      
          
        object f1   stack pop    
        object f2   stack pop    
 
        stack push f1   
        stack push f2 bsttextlength bstvmvisitor visitor  parserrulecontext ctx stack isempty bstvmexception  not enough operands on stack operation text length$  line %d   formatted ctx start getline      
          
        object o1   stack pop o1 s bstvmexception  can only perform operation on a text length$  line %d   formatted ctx start getline c   s tochararray result   0 i   0 n   s length bracelevel   0 i   n    
            i c i - 1     ' '    
                bracelevel bracelevel    1      i   n c i     '\\'    
                        i i   n      bracelevel   0 c i     ' '    
                                bracelevel c i     ' '    
                                bracelevel    
                              
                            i    
                          
                        result c i - 1 bracelevel   0    
                    bracelevel result    
              
          
        stack push result bsttextprefix bstvmvisitor visitor  parserrulecontext ctx stack size     2 bstvmexception  not enough operands on stack operation text prefix$  line %d   formatted ctx start getline      
          
 
        object o1   stack pop o1 integer     
            logger warn  an integer is needed as first parameter to text prefix$  line       ctx start getline     
            stack push object o2   stack pop o2 logger warn  a is needed as second parameter to text prefix$  line       ctx start getline     
            stack push stack push bsttextprefixer textprefix  integer  o1 o2 bsttop bstvmvisitor visitor  parserrulecontext ctx    
        logger debug  stack entry     line       stack pop    ctx start getline bsttypefunction bstfunction   
         override execute bstvmvisitor visitor  parserrulecontext ctx bstvmexception  type$ need a context  line %d   formatted ctx start getline      
          
 
         override execute bstvmvisitor visitor  parserrulecontext ctx  bstentry bstentrycontext bstentrycontext execute visitor  ctx stack push bstentrycontext entry gettype   getname bstwarning bstvmvisitor visitor  parserrulecontext ctx    
        logger warn  warning  #          bstwarning    stack pop bstwhile bstvmvisitor visitor  parserrulecontext ctx stack size     2 bstvmexception  not enough operands on stack operation line %d   formatted ctx start getline      
          
        object f2   stack pop    
        object f1   stack pop f1 bstvmvisitor identifier      f1 parsetree   
                     f2 bstvmvisitor identifier      f2 parsetree bstvmexception  expecting two functions line %d   formatted ctx start getline visitor visit  parsetree  f1   
 
            object i   stack pop i integer bstvmexception  first parameter to has to an integer but was %s  line %d   
                         formatted i tostring    ctx start getline integer  i    0 visitor visit  parsetree  f2 bstwidth bstvmvisitor visitor  parserrulecontext ctx stack isempty bstvmexception  not enough operands on stack operation width$  line %d   formatted ctx start getline      
          
        object o1   stack pop o1 logger warn  a is needed width$    
            stack push 0 stack push bstwidthcalculator width o1 bstwrite bstvmvisitor visitor  parserrulecontext ctx s stack pop    
        bbl append s   
      
  src main org jabref logic bst BstFunctions