 org jabref logic util io fileutil is_posix_compliant   filesystems getdefault   supportedfileattributeviews   contains  posix maximum_file_name_length   255 illegal_chars     
            0  1  2  3  4  5  6  7  8  9  
            10  11  12  13  14  15  16  17  18  19  
            20  21  22  23  24  25  26  27  28  29  
            30  31  34  
            42  
            58    
            60  62  63  
            123  124  125 fileutil optional getfileextension filename dotposition   filename lastindexof dotposition   0      dotposition    filename length   - 1 optional of filename substring dotposition   1  trim   tolowercase locale root optional empty optional getfileextension path file getfileextension file getfilename   tostring getbasename filenamewithextension com google common io files getnamewithoutextension filenamewithextension getbasename path filenamewithextension getbasename filenamewithextension getfilename   tostring getvalidfilename filename namewithoutextension   getbasename filename namewithoutextension length     maximum_file_name_length    
            optional extension   getfileextension filename shortname   namewithoutextension substring 0  maximum_file_name_length - extension map s -  s length     1  orelse 0    
            logger info format  truncated the too filename '%s'  %d characters  to '%s'    filename  filename length    shortname extension map s -  shortname         s  orelse shortname filename path addextension path path extension path resolvesibling path getfilename     extension optional getuniquepathdirectory list paths  path comparepath filename   comparepath getfilename   tostring    
 
        list uniquepathparts   uniquepathsubstrings paths uniquepathparts stream   
                               filter part -  comparepath tostring   contains part  
                                                  part equals filename     part contains file separator   
                               findfirst   
                               map part -  part substring 0  part lastindexof file separator optional getuniquepathfragment list paths  path comparepath uniquepathsubstrings paths  stream   
                                           filter part -  comparepath tostring   contains part   
                                           sorted comparator comparingint length  reversed    
                                           findfirst list uniquepathsubstrings list paths    
        list stack stacklist arraylist   paths size path   paths    
            list directories   arrays aslist path split pattern quote file separator     
            stack stack stack      
            stack addall directories   
            stacklist add stack   
          
 
        list pathsubstrings arraylist   collections ncopies paths size stacklist stream   allmatch vector  isempty i   0  i   stacklist size    i tempstring   pathsubstrings get i tempstring isempty       stacklist get i  isempty      
                    pathsubstrings set i  stacklist get i  pop stacklist get i  isempty      
                    pathsubstrings set i  stacklist get i  pop     file separator   tempstring i   0  i   stacklist size    i tempstring   pathsubstrings get i collections frequency pathsubstrings  tempstring     1    
                    stacklist get i  clear pathsubstrings copyfile path pathtosourcefile  path pathtodestinationfile replaceexisting files exists pathtosourcefile     
            logger error  path to the source file doesn't exist files exists pathtodestinationfile      replaceexisting    
            logger error  path to the destination file exists but the file shouldn't be replaced files write pathtodestinationfile  files readallbytes pathtosourcefile   
                        standardopenoption create  standardopenoption write  standardopenoption truncate_existing ioexception e    
            logger error  copying files failed    e path relativize path file  list path  directories file isabsolute file path directory   directories file startswith directory directory relativize file file list path  getlistoflinkedfiles list bibentry  bes  list path  filedirs    
        objects requirenonnull bes   
        objects requirenonnull filedirs bes stream   
                   flatmap entry -  entry getfiles   stream    
                   flatmap file -  optionalutil tostream file findin filedirs    
                   collect collectors tolist createfilenamefrompattern bibdatabase database  bibentry entry filenamepattern targetname   bracketedpattern expandbrackets filenamepattern  ' '  entry  database targetname isempty      
            targetname   entry getcitationkey   orelse targetname   filenamecleaner cleanfilename targetname targetname createdirnamefrompattern bibdatabase database  bibentry entry directorynamepattern targetname   bracketedpattern expandbrackets directorynamepattern  ' '  entry  database targetname isempty targetname  
          
 
          
        targetname   filenamecleaner cleandirectoryname targetname targetname optional path  findsinglefilerecursively filename  path rootdirectory stream path  pathstream   files walk rootdirectory pathstream 
                              filter files  isregularfile  
                              filter f -  f getfilename   tostring   equals filename   
                              findfirst uncheckedioexception   ioexception ex    
            logger error  error trying to locate the file     filename     inside the directory     rootdirectory optional empty optional path  find bibdatabasecontext databasecontext filename  filepreferences filepreferences    
        objects requirenonnull filename   filename find filename  databasecontext getfiledirectories filepreferences optional path  find filename  list path  directories directories isempty      
              
            path path   path of filename path isabsolute optional of path optional empty directories stream   
                           flatmap directory -  find filename  directory  stream    
                           findfirst optional path  find filename  path directory    
        objects requirenonnull filename   
        objects requirenonnull directory detectbadfilename filename     
            logger error  invalid characters in path file       filename optional empty filename isempty optional of directory   
          
 
        path resolvedfile   directory resolve filename files exists resolvedfile optional of resolvedfile furthestdirfromroot   directory getfilename   tostring filename startswith furthestdirfromroot     
            resolvedfile   directory resolvesibling filename files exists resolvedfile optional of resolvedfile optional empty list path  findlistoffiles filename  list path  directories    
        list path  files arraylist path dir   directories    
            fileutil find filename  dir  ifpresent files  add files toportablestring path path path tostring   
                    replace isbibfile path file getfileextension file  filter  bib   equals  ispresent ispdffile path file getfileextension file  filter  pdf   equals  ispresent path getinitialdirectory bibdatabasecontext databasecontext  path workingdirectory databasecontext getdatabasepath   map path  getparent  orelse workingdirectory detectbadfilename filename filename   path of filename  getfilename   tostring invalidpathexception e i   0  i   filename length    i c   filename charat i ischarlegal c ischarlegal c arrays binarysearch illegal_chars  c    0  
      
  src main org jabref logic util io FileUtil