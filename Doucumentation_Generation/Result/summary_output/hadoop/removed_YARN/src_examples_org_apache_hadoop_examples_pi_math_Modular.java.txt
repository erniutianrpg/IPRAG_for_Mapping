This code provides modular arithmetic operations:  
1. `mod(e, n)` efficiently computes 2^e mod n using exponentiation by squaring, handling overflow.  
2. `addMod(x, a)` adds two doubles modulo 1.0, keeping the result in [0,1).  
3. `modInverse(x, y)` computes the modular inverse of x modulo y using the extended Euclidean algorithm.  

The methods handle large numbers and edge cases while optimizing performance.